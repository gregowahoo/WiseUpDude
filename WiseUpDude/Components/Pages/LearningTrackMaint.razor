@page "/learningtrack-maint"
@using WiseUpDude.Model

@rendermode InteractiveServer

<PageTitle>Learning Track Management</PageTitle>

<div class="container-fluid mt-4">
    <div class="row">
        <div class="col-12">
            <h2 class="mb-4 text-primary"><i class="bi bi-kanban-fill me-2"></i>Learning Track Management</h2>
        </div>
    </div>

    <ul class="nav nav-tabs nav-fill mb-3" id="learningTrackTab" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link active" id="tracks-tab" data-bs-toggle="tab" data-bs-target="#tracks-tab-pane" type="button" role="tab" aria-controls="tracks-tab-pane" aria-selected="true">
                <i class="bi bi-list-task me-1"></i> Learning Tracks
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link @(selectedLearningTrackId == null ? "disabled" : "")" id="categories-tab" data-bs-toggle="tab" data-bs-target="#categories-tab-pane" type="button" role="tab" aria-controls="categories-tab-pane" aria-selected="false">
                <i class="bi bi-diagram-3 me-1"></i> Categories
                @if (selectedLearningTrackId != null) {<span class="badge bg-secondary ms-1">Track: @selectedLearningTrack?.Name</span>}
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link @(selectedLearningTrackCategoryId == null ? "disabled" : "")" id="sources-tab" data-bs-toggle="tab" data-bs-target="#sources-tab-pane" type="button" role="tab" aria-controls="sources-tab-pane" aria-selected="false">
                <i class="bi bi-link-45deg me-1"></i> Sources
                @if (selectedLearningTrackCategory != null) {<span class="badge bg-info ms-1">Category: @selectedLearningTrackCategory?.Name</span>}
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link @(selectedLearningTrackCategoryId == null ? "disabled" : "")" id="quizzes-tab" data-bs-toggle="tab" data-bs-target="#quizzes-tab-pane" type="button" role="tab" aria-controls="quizzes-tab-pane" aria-selected="false">
                <i class="bi bi-patch-question me-1"></i> Quizzes
                 @if (selectedLearningTrackCategory != null) {<span class="badge bg-info ms-1">Category: @selectedLearningTrackCategory?.Name</span>}
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link @(selectedLearningTrackQuizId == null ? "disabled" : "")" id="questions-tab" data-bs-toggle="tab" data-bs-target="#questions-tab-pane" type="button" role="tab" aria-controls="questions-tab-pane" aria-selected="false">
                <i class="bi bi-card-list me-1"></i> Quiz Questions
                @if (selectedLearningTrackQuiz != null) {<span class="badge bg-warning ms-1">Quiz: @selectedLearningTrackQuiz.Name</span>}
            </button>
        </li>
    </ul>

    <div class="tab-content" id="learningTrackTabContent">
        <div class="tab-pane fade show active" id="tracks-tab-pane" role="tabpanel" aria-labelledby="tracks-tab" tabindex="0">
            <div class="card shadow-sm">
                <div class="card-body">
                    @* <LearningTrackGrid OnLearningTrackSelected="HandleLearningTrackSelected" /> *@
                    <LearningTrackPage OnLearningTrackSelected="HandleLearningTrackSelected" />
                </div>
            </div>
        </div>

        <div class="tab-pane fade" id="categories-tab-pane" role="tabpanel" aria-labelledby="categories-tab" tabindex="0">
            @if (selectedLearningTrackId != null)
            {
                <div class="card shadow-sm">
                    <div class="card-body">
                        @* <LearningTrackCategoryGrid LearningTrackId="@selectedLearningTrackId.Value" OnLearningTrackCategorySelected="HandleLearningTrackCategorySelected" /> *@
                        <LearningTrackCategoryPage LearningTrackId="@selectedLearningTrackId.Value" OnLearningTrackCategorySelected="HandleLearningTrackCategorySelected" />
                    </div>
                </div>
            }
            else
            {
                <div class="alert alert-info" role="alert">
                    <i class="bi bi-info-circle-fill me-2"></i> Select a Learning Track to view its categories.
                </div>
            }
        </div>

        <div class="tab-pane fade" id="sources-tab-pane" role="tabpanel" aria-labelledby="sources-tab" tabindex="0">
            @if (selectedLearningTrackCategoryId != null)
            {
                <div class="card shadow-sm">
                    <div class="card-body">
                        @* <LearningTrackSourcesGrid LearningTrackCategoryId="@selectedLearningTrackCategoryId.Value" OnLearningTrackSourceSelected="HandleLearningTrackSourceSelected" /> *@
                        <LearningTrackSourcesPage LearningTrackCategoryId="@selectedLearningTrackCategoryId.Value" OnLearningTrackSourceSelected="HandleLearningTrackSourceSelected" />
                    </div>
                </div>
            }
            else
            {
                <div class="alert alert-info" role="alert">
                    <i class="bi bi-info-circle-fill me-2"></i> Select a Category to view its sources.
                </div>
            }
        </div>

        <div class="tab-pane fade" id="quizzes-tab-pane" role="tabpanel" aria-labelledby="quizzes-tab" tabindex="0">
            @if (selectedLearningTrackSourceId != null)
            {
                <div class="card shadow-sm">
                    <div class="card-body">
                        <LearningTrackQuizGrid LearningTrackSourceId="@selectedLearningTrackSourceId.Value" OnLearningTrackQuizSelected="HandleLearningTrackQuizSelected" />
                    </div>
                </div>
            }
            else
            {
                <div class="alert alert-info" role="alert">
                    <i class="bi bi-info-circle-fill me-2"></i> Select a Category to view its quizzes.
                </div>
            }
        </div>
        
        <div class="tab-pane fade" id="questions-tab-pane" role="tabpanel" aria-labelledby="questions-tab" tabindex="0">
            @if (selectedLearningTrackQuizId != null)
            {
                <div class="card shadow-sm">
                    <div class="card-body">
                        <LearningTrackQuizQuestionsGrid LearningTrackQuizId="@selectedLearningTrackQuizId.Value" />
                    </div>
                </div>
            }
            else
            {
                <div class="alert alert-info" role="alert">
                    <i class="bi bi-info-circle-fill me-2"></i> Select a Quiz to view its questions.
                </div>
            }
        </div>
    </div>
</div>

@code {
    private int? selectedLearningTrackId;
    private LearningTrack? selectedLearningTrack;

    private int? selectedLearningTrackCategoryId;
    private LearningTrackCategory? selectedLearningTrackCategory;

    private int? selectedLearningTrackSourceId;
    // private LearningTrackSource? selectedLearningTrackSource; // If needed

    private int? selectedLearningTrackQuizId;
    private LearningTrackQuiz? selectedLearningTrackQuiz;

    private void HandleLearningTrackSelected(LearningTrack track)
    {
        selectedLearningTrack = track;
        selectedLearningTrackId = track?.Id;

        // Reset downstream selections
        selectedLearningTrackCategoryId = null;
        selectedLearningTrackCategory = null;
        selectedLearningTrackSourceId = null;
        selectedLearningTrackQuizId = null;
        selectedLearningTrackQuiz = null;
        
        StateHasChanged(); // Ensure UI updates for tab states
    }

    private void HandleLearningTrackCategorySelected(LearningTrackCategory category)
    {
        selectedLearningTrackCategory = category;
        selectedLearningTrackCategoryId = category?.Id;

        // Reset downstream selections
        selectedLearningTrackSourceId = null;
        selectedLearningTrackQuizId = null;
        selectedLearningTrackQuiz = null;

        StateHasChanged();
    }

    private void HandleLearningTrackSourceSelected(LearningTrackSource source)
    {
        // selectedLearningTrackSource = source; // If you need to store the selected source
        selectedLearningTrackSourceId = source?.Id;
        StateHasChanged();
    }

    private void HandleLearningTrackQuizSelected(LearningTrackQuiz quiz)
    {
        selectedLearningTrackQuiz = quiz;
        selectedLearningTrackQuizId = quiz?.Id;
        StateHasChanged();
    }

    // Placeholder for initial data loading if needed for the selected items display
    // protected override async Task OnParametersSetAsync()
    // {
    //    // If you need to load names for badges based on IDs if full objects aren't passed up
    // }
}