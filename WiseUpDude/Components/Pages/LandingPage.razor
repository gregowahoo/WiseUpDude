@page "/"

@layout WiseUpDude.Components.Layout.LandingLayout

@rendermode InteractiveServer

@inject WiseUpDude.Services.ITokenValidationService TokenValidationService

@code {
    [Inject] NavigationManager NavManager { get; set; } = default!;
    [Inject] AuthenticationStateProvider AuthenticationStateProvider { get; set; } = default!;

    private bool _isAuthenticated;
    private bool _isTokenValidated;
    private string _tokenInput = string.Empty;
    private string _tokenErrorMessage = string.Empty;
    private bool _isValidatingToken;
    private bool _hasCheckedToken = false;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity?.IsAuthenticated == true)
        {
            _isAuthenticated = true;
            await Task.Delay(1); // Ensure rendering completes
            NavManager.NavigateTo("/home");
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !_hasCheckedToken && !_isAuthenticated)
        {
            _hasCheckedToken = true;
            
            // Check if token is already validated in this session
            _isTokenValidated = await TokenValidationService.IsTokenValidatedAsync();
            StateHasChanged(); // Trigger re-render to show correct UI state
        }
    }

    private async Task ValidateTokenAsync()
    {
        _isValidatingToken = true;
        _tokenErrorMessage = string.Empty;
        StateHasChanged();

        if (string.IsNullOrWhiteSpace(_tokenInput))
        {
            _tokenErrorMessage = "Please enter the access token.";
            _isValidatingToken = false;
            return;
        }

        if (await TokenValidationService.ValidateTokenAsync(_tokenInput))
        {
            await TokenValidationService.SetTokenValidatedAsync();
            _isTokenValidated = true;
            _tokenErrorMessage = string.Empty;
        }
        else
        {
            _tokenErrorMessage = "Invalid access token. Please contact the administrator for the correct token.";
        }

        _isValidatingToken = false;
        StateHasChanged();
    }

    private async Task OnTokenInputKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            await ValidateTokenAsync();
        }
    }
}

@if (!_isAuthenticated)
{
    <div class="container py-5">
        <!-- Hero Section -->
        <section class="text-center mb-5">
            <h1 class="display-4 fw-bold">Wise Up Dude</h1>
            <p class="lead text-muted">Learn, quiz, repeat. Master any topic effortlessly through quizzes.</p>
        </section>

        <!-- Features Section -->
        <section class="features-section py-5 bg-light">
            <div class="container">
                <h2 class="text-center mb-4">What is Wise Up Dude?</h2>
                <div class="row g-4">
                    <div class="col-md-3">
                        <div class="card border-0 shadow-sm text-center p-4">
                            <i class="bi bi-person-check fs-1 text-primary mb-3"></i>
                            <h5>Personalized Learning</h5>
                            <p>Quizzes tailored specifically to your learning needs and interests.</p>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card border-0 shadow-sm text-center p-4">
                            <i class="bi bi-lightbulb fs-1 text-warning mb-3"></i>
                            <h5>Adaptive Quizzes</h5>
                            <p>Practice and reinforce knowledge with quizzes that adapt as you learn.</p>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card border-0 shadow-sm text-center p-4">
                            <i class="bi bi-cpu fs-1 text-success mb-3"></i>
                            <h5>AI Quiz Prompt</h5>
                            <p>Instantly generate quizzes by simply entering any topic or idea using AI.</p>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card border-0 shadow-sm text-center p-4">
                            <i class="bi bi-bar-chart-line fs-1 text-danger mb-3"></i>
                            <h5>Progress Tracking</h5>
                            <p>Easily track your quiz results and measure your improvement.</p>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card border-0 shadow-sm text-center p-4">
                            <i class="bi bi-mortarboard fs-1 text-primary mb-3"></i>
                            <h5>Learn Mode</h5>
                            <p>Master topics with adaptive repetition and progress tracking.</p>
                        </div>
                    </div>

                    <!-- Save and Repeat Quizzes Card -->
                    <div class="col-md-12 mt-4">
                        <div class="card border-0 shadow-sm text-center p-4">
                            <i class="bi bi-arrow-repeat fs-1 text-info mb-3"></i>
                            <h5>Save and Repeat Quizzes</h5>
                            <p>Your progress is optionally tracked! Wise Up Dude can make sure you know the material.</p>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- Call-to-action Section -->
        @if (!_isTokenValidated)
        {
            <section class="cta-section py-5 bg-warning text-dark text-center">
                <h2>Access Required</h2>
                <p>This site is currently in testing phase. Please enter the access token to continue.</p>
                <div class="row justify-content-center">
                    <div class="col-md-6 col-lg-4">
                        <div class="input-group mb-3">
                            <input type="text" class="form-control" placeholder="Enter access token" 
                                   @bind="_tokenInput" @onkeypress="OnTokenInputKeyPress" disabled="@_isValidatingToken" />
                            <button class="btn btn-dark" type="button" @onclick="ValidateTokenAsync" disabled="@_isValidatingToken">
                                @if (_isValidatingToken)
                                {
                                    <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
                                    <span>Validating...</span>
                                }
                                else
                                {
                                    <span>Validate</span>
                                }
                            </button>
                        </div>
                        @if (!string.IsNullOrEmpty(_tokenErrorMessage))
                        {
                            <div class="alert alert-danger" role="alert">
                                @_tokenErrorMessage
                            </div>
                        }
                    </div>
                </div>
            </section>
        }
        else
        {
            <section class="cta-section py-5 bg-primary text-white text-center">
                <h2>Ready to Learn, Anything?</h2>
                <p>Register and use Wise Up Dude for free and start mastering any subject! Click Below!</p>
                <a class="btn btn-light btn-lg mt-3" href="/Account/Login">I Want To Be A Wise Guy!</a>
            </section>
        }
    </div>
}
