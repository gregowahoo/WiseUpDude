@using WiseUpDude.Model

<div>
    @if (IsEditing)
    {
        <input class="form-control d-inline w-auto me-2" @bind="EditSource.Name" placeholder="Source Name" />
        <select class="form-select d-inline w-auto me-2" @bind="EditSource.SourceType">
            <option value="">Select Source Type</option>
            <option value="YouTube">YouTube</option>
            <option value="Blog">Blog</option>
            <option value="Book">Book</option>
            <option value="Article">Article</option>
            <option value="Podcast">Podcast</option>
            <option value="Other">Other</option>
        </select>
        <input class="form-control d-inline w-auto me-2" @bind="EditSource.Url" placeholder="URL" />
        <input class="form-control d-inline w-auto me-2" @bind="EditSource.Description" placeholder="Description" />
        <button class="btn btn-sm btn-success me-1" @onclick="() => OnSave.InvokeAsync(EditSource)">Save</button>
        <button class="btn btn-sm btn-secondary" @onclick="OnCancel">Cancel</button>
    }
    else
    {
        <span>@Source.Name <span class="text-muted">(@Source.SourceType)</span> <span class="text-muted ms-2">@Source.Description</span></span>
        <button class="btn btn-sm btn-link ms-2" @onclick:stopPropagation @onclick="OnEdit">Edit</button>
        <button class="btn btn-sm btn-link text-danger" @onclick:stopPropagation @onclick="() => OnDelete.InvokeAsync(Source.Id)">Delete</button>
    }
</div>

@code {
    [Parameter] public LearningTrackSource Source { get; set; }
    [Parameter] public bool IsEditing { get; set; }
    [Parameter] public LearningTrackSource EditSource { get; set; }
    [Parameter] public EventCallback<LearningTrackSource> OnSave { get; set; }
    [Parameter] public EventCallback OnCancel { get; set; }
    [Parameter] public EventCallback OnEdit { get; set; }
    [Parameter] public EventCallback<int> OnDelete { get; set; }
}
