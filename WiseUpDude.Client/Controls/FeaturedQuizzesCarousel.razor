@using WiseUpDude.Shared
@using WiseUpDude.Model

<div class="row mb-4">
    <div class="col-12">
        <div class="card shadow-sm border-primary">
            <div class="card-header bg-primary text-white py-2 px-3">
                <h6 class="mb-0">? Special Picks</h6>
            </div>
            <div class="card-body p-2">
                @if (FeaturedQuizzes != null && FeaturedQuizzes.Any())
                {
                    <div class="featured-quizzes-scroll">
                        @foreach (var featured in FeaturedQuizzes)
                        {
                            var quiz = featured.Quiz;
                            var type = featured.AssignmentType;
                            <div class="card h-100 shadow-sm featured-quiz-card">
                                <div class="card-header d-flex justify-content-between align-items-center py-1 px-2">
                                    <span class="badge bg-info" style="font-size:0.85em;">@type.Name</span>
                                    <span class="text-muted small">@quiz.Difficulty</span>
                                </div>
                                <div class="card-body py-2 px-2">
                                    <div class="fw-semibold text-truncate" title="@quiz.Name" style="font-size:1em;">@quiz.Name</div>
                                    <div class="text-muted small text-truncate-2" title="@quiz.Description">@quiz.Description</div>
                                </div>
                                <div class="card-footer text-end py-1 px-2 bg-white border-0">
                                    <button class="btn btn-primary btn-sm" style="font-size:0.95em;" @onclick="() => OnTakeQuiz.InvokeAsync(quiz.Id)">
                                        <i class="bi bi-play-fill"></i> Take
                                    </button>
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <div class="text-muted">No special quizzes are currently active.</div>
                }
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public List<Model.FeaturedQuizDisplay> FeaturedQuizzes { get; set; } = new();
    [Parameter]
    public EventCallback<int> OnTakeQuiz { get; set; }
}
